// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/avito-test-case/internal/pkg/balance (interfaces: Handler)

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// GetUserBalance mocks base method.
func (m *MockHandler) GetUserBalance(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetUserBalance", arg0, arg1)
}

// GetUserBalance indicates an expected call of GetUserBalance.
func (mr *MockHandlerMockRecorder) GetUserBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserBalance", reflect.TypeOf((*MockHandler)(nil).GetUserBalance), arg0, arg1)
}

// ImproveUserBalance mocks base method.
func (m *MockHandler) ImproveUserBalance(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ImproveUserBalance", arg0, arg1)
}

// ImproveUserBalance indicates an expected call of ImproveUserBalance.
func (mr *MockHandlerMockRecorder) ImproveUserBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImproveUserBalance", reflect.TypeOf((*MockHandler)(nil).ImproveUserBalance), arg0, arg1)
}

// MakeUserBalanceTransfer mocks base method.
func (m *MockHandler) MakeUserBalanceTransfer(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MakeUserBalanceTransfer", arg0, arg1)
}

// MakeUserBalanceTransfer indicates an expected call of MakeUserBalanceTransfer.
func (mr *MockHandlerMockRecorder) MakeUserBalanceTransfer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeUserBalanceTransfer", reflect.TypeOf((*MockHandler)(nil).MakeUserBalanceTransfer), arg0, arg1)
}

// WithdrawUserBalance mocks base method.
func (m *MockHandler) WithdrawUserBalance(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WithdrawUserBalance", arg0, arg1)
}

// WithdrawUserBalance indicates an expected call of WithdrawUserBalance.
func (mr *MockHandlerMockRecorder) WithdrawUserBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawUserBalance", reflect.TypeOf((*MockHandler)(nil).WithdrawUserBalance), arg0, arg1)
}
